name: Update Wrangler Configuration

on:
  workflow_dispatch:
    inputs:
      new_domain_value:
        description: 'Nilai domain baru yang akan ditambahkan ke wrangler.toml'
        required: true
        type: string

jobs:
  update-config:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Update wrangler.toml
      run: |
        # Memeriksa apakah file wrangler.toml ada
        if [ ! -f wrangler.toml ]; then
          echo "File wrangler.toml tidak ditemukan!"
          exit 1
        fi
        
        # Membuat backup file original
        cp wrangler.toml wrangler.toml.backup
        
        # Menggunakan pendekatan yang lebih aman dengan awk untuk menemukan baris routes
        routes_start=$(awk '/routes = \[/{print NR}' wrangler.toml)
        
        # Mencari baris kurung tutup pertama setelah routes_start
        routes_end=$(awk -v start="$routes_start" 'NR > start && /^\]$/{print NR; exit}' wrangler.toml)
        
        # Memeriksa apakah array routes kosong
        is_empty=false
        if [ $((routes_end - routes_start)) -eq 1 ]; then
          is_empty=true
          echo "Routes array is empty"
        else
          echo "Routes array is not empty"
        fi
        
        # Membuat file sementara dengan konten hingga baris routes
        head -n $routes_start wrangler.toml > wrangler.toml.new
        
        # Menambahkan header routes
        echo "routes = [" >> wrangler.toml.new
        
        # Jika array tidak kosong, tambahkan konten yang ada
        if [ "$is_empty" = false ]; then
          # Mengambil konten routes yang ada (tanpa header dan footer)
          awk -v start="$routes_start" -v end="$routes_end" 'NR > start && NR < end' wrangler.toml >> wrangler.toml.new
        fi
        
        # Menambahkan routes baru dengan nilai domain baru
        if [ "$is_empty" = false ]; then
          # Jika array tidak kosong, tambahkan baris kosong untuk pemisah
          echo "" >> wrangler.toml.new
        fi
        
        # Menggunakan variabel domain untuk menghindari masalah dengan karakter khusus
        DOMAIN="${{ github.event.inputs.new_domain_value }}"
        
        echo "  { pattern = \"$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"ava.game.naver.com.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"quiz.int.vidio.com.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"graph.instagram.com.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"zaintest.vuclip.com.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"support.zoom.us.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        echo "  { pattern = \"cache.netflix.com.$DOMAIN\", custom_domain = true }," >> wrangler.toml.new
        
        # Menambahkan kurung tutup untuk routes
        echo "]" >> wrangler.toml.new
        
        # Menambahkan sisa konten file setelah section routes
        if [ -n "$routes_end" ]; then
          tail -n +$((routes_end + 1)) wrangler.toml >> wrangler.toml.new
        fi
        
        # Mengganti file asli dengan file baru
        mv wrangler.toml.new wrangler.toml
        
        # Menampilkan file yang telah diupdate untuk verifikasi
        echo "File wrangler.toml setelah diupdate:"
        cat wrangler.toml
    
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add wrangler.toml
        git commit -m "Add new domain value: ${{ github.event.inputs.new_domain_value }}"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.PAT }}
        branch: ${{ github.ref }}
